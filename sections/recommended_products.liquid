<!-- Show section initially, then let JavaScript handle the logic -->
<div data-url="{{ routes.product_recommendations_url }}?section_id={{ section.id }}&product_id={{ product.id }}&limit=2&intent=related" class="w-layout-blockcontainer container product-recommendations w-container">
  
  {% if recommendations.performed %}
    <!-- This runs when called via AJAX endpoint -->
    {% if recommendations.products_count > 0 %}
      <div class="row u-vgap-40">
        <div class="col col-lg-6 col-sm-12">
          <div><h2>Worn with</h2></div>
        </div>
        <div class="col col-lg-6 col-sm-12">
          <div class="recommended_grid">
            {% for product in recommendations.products %} 
              <div li-for="product in recommendations.products"> 
                {% render 'product_item', product: product %} 
              </div> 
            {% endfor %}
          </div>
        </div>
      </div>
    {% endif %}
  {% else %}
    <!-- Placeholder for initial page load - will be replaced by JavaScript -->
    <div class="recommendations-placeholder" style="display: none;">
      <div class="row u-vgap-40">
        <div class="col col-lg-6 col-sm-12">
          <div><h2>Worn with</h2></div>
        </div>
        <div class="col col-lg-6 col-sm-12">
          <div class="recommended_grid">
            <!-- JavaScript will populate this -->
          </div>
        </div>
      </div>
    </div>
  {% endif %}
  
</div>

<div class="u-lg-hide w-embed w-script">
  <script>
    document.addEventListener('DOMContentLoaded', function() { 
      const productRecommendationsSection = document.querySelector('.product-recommendations'); 
      if (!productRecommendationsSection) return;
      
      const url = productRecommendationsSection.dataset?.url;
      if (!url) return;
      
      fetch(url) 
        .then(response => response.text()) 
        .then(text => { 
          const html = document.createElement('div'); 
          html.innerHTML = text; 
          const recommendations = html.querySelector('.product-recommendations'); 
          
          // Check if the fetched content has actual product recommendations
          if (recommendations && recommendations.querySelector('.recommended_grid') && 
              recommendations.querySelector('.recommended_grid').children.length > 0) { 
            // Replace entire section with fetched content
            productRecommendationsSection.innerHTML = recommendations.innerHTML; 
            productRecommendationsSection.style.display = 'block';
          } else {
            // No recommendations found, remove the section entirely
            productRecommendationsSection.remove();
          }
        }) 
        .catch(e => { 
          console.error(e);
          productRecommendationsSection.remove();
        }); 
    }); 
  </script>
</div>