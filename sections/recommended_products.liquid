<!-- Always render section container for JavaScript to target -->
<div data-url="{{ routes.product_recommendations_url }}?section_id={{ section.id }}&product_id={{ product.id }}&limit=4&intent=related" class="padding-global padding-section-medium product-recommendations">
  <div class="container-large">
    <div class="headline-wrapper">
      <h2 class="heading-style-h2">{{ section.settings.text_heading }}</h2>
    </div>
    <div class="product_list-wrapper">
      <ul role="list" class="product_list w-list-unstyled">
        {% if recommendations.performed %}
          <!-- Only show products if recommendations were fetched via endpoint -->
          {% for product in recommendations.products %}    
            <li class="product_list-item">
              {% render 'product_item', product: product %}
            </li>
          {% endfor %}
        {% else %}
          <!-- Show placeholder while JavaScript loads recommendations -->
          <li class="product_list-item placeholder">
            <!-- Add your loading/placeholder content here -->
            <div class="loading-placeholder">Loading recommendations...</div>
          </li>
        {% endif %}
      </ul>
    </div>
  </div>
</div>

<div class="w-embed w-script">
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const productRecommendationsSection = document.querySelector('.product-recommendations');
      
      if (!productRecommendationsSection) return;
      
      const url = productRecommendationsSection.dataset.url;
      
      fetch(url)
        .then(response => response.text())
        .then(text => {
          const html = document.createElement('div');
          html.innerHTML = text;
          const recommendations = html.querySelector('.product-recommendations');
          
          if (recommendations) {
            // Check if the fetched content has actual products (not just placeholder)
            const productItems = recommendations.querySelectorAll('.product_list-item:not(.placeholder)');
            
            if (productItems.length > 0) {
              // Update with real recommendations
              productRecommendationsSection.innerHTML = recommendations.innerHTML;
            } else {
              // Hide section if no recommendations found
              productRecommendationsSection.style.display = 'none';
            }
          } else {
            // Hide section if fetch failed
            productRecommendationsSection.style.display = 'none';
          }
        })
        .catch(e => {
          console.error('Failed to load recommendations:', e);
          // Hide section on error
          productRecommendationsSection.style.display = 'none';
        });
    });
  </script>
</div>

{% schema %}
{
  "tag": "section",
  "name": "Recommended Products",
  "class": "section_product-recommended",
  "settings": [
    {
      "id": "text_heading",
      "type": "text",
      "label": "Heading",
      "default": "Recommended"
    }
  ],
  "presets": [
    {
      "name": "Recommended Products",
      "category": "Liquify",
      "blocks": []
    }
  ],
  "enabled_on": {
    "templates": ["product"]
  }
}
{% endschema %}